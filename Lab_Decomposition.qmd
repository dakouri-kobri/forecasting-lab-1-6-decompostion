---
title: "Lab1: Decomposition"
author: "Dakouri Kobri"
format: pdf
editor: visual
---

## 1 Basic R Computation

```{r}
1 + 1 
```

```{r}
a <- 5
b <- 2
```

```{r}
a + b # addition
```

```{r}
a - b # subtruction
```

```{r}
a * b # multiplication
```

```{r}
a / b # division
```

```{r}
total <- a + b
print(total)
```

```{r}
sum(a, b)
```

```{r}
total == sum(a, b)
```

```{r}
total == a - b
```

```{r}
c(5, 8)
```

```{r}
all <- c(a, b, total)
print(all)
```

## 2 Loading packages into R

```{r}
# Install packages
install.packages('forecast')
install.packages('tsutils')
```

```{r}
# Load packages
library(forecast)
library(tsutils)
```

```{r}
# Get package documentation
?'forecast-package'
```

## 3 Loading data into R

```{r}
# Load and print data
Y <- read.csv("./workshop1R.csv") 
print(Y)
```

```{r}
# Get columns names
colnames(Y)
```

Example of a time series modeling:

```{r}
# Store series Level_A in y
y <- Y[, 1]
print(y)
```

```{r}
# Turn vector y into a series
y <- ts(y, frequency = 12)
print(y)
```

```{r}
# Suppose the data ends in November
y <- ts(y, frequency = 12, end = c(2018, 11))
print(y)
```

```{r}
# Plot the series
plot(y)
```

## 4 Constructing estimation and hold-out sets

```{r}
# Set the last year's data as a hold-out/test set
y.tst <- tail(y, 12)
print(y.tst)
```

```{r}
# Estimation (fitting, training) set
y.trn <- head(y, 48)
print(y.trn)
```

Observation on splitting methods:

```{r}
yy <- y[1:48]
print(yy)
```

```{r}
class(y) # Times series object
```

```{r}
class(yy) # Vector of numeric values
```

```{r}
# Carry the properties of y to yy
yy <- ts(yy, frequency = frequency(y), start = start(y))
print(yy)
```

```{r}
class(yy) # yy is now a time series object
```

```{r}
# Compare yy to the estimation set
yy == y.trn
```

```{r}
all(yy == y.trn) # provides overall logical comparison result
```

## 5 Exploring a time series

```{r}
# Explore trend: Calculate and plot centered moving average
cma <- cmav(y.trn, outplot = 1)
```

```{r}
# Print the CMA calculated values
print(cma)
```

```{r}
# Explore seasonality
seasplot(y.trn)
```

```{r}
# Alternative visulisations with seasplot()
# Boxplots of each month's values
seasplot(y.trn, outplot = 2)
```

```{r}
# Alternative visulisations with seasplot()
# The average (red) value for each month with a series of each month across years (blue) 
seasplot(y.trn, outplot = 3)
```

```{r}
# Alternative visulisations with seasplot()
# `Connected' boxplot across months.
seasplot(y.trn,outplot=4) 
```

```{r}
# Decomposing with decomp()
# NB: decomp() always assume both components, trend & seasinality are present, while in decomposition, wes hould remove either of the components, if it's present, to avoid noise.
dc <- decomp(y.trn, outplot = 1)
```

## 6 Exercises

### 6.1

#### Level_B:

```{r}
# Select `Level_B`
y_B <- Y[, 2]

# Convert to a time series, assuming the data ends in November
y_B <- ts(y_B, frequency = 12, end = c(2018, 11))
print(y_B)
```

```{r}
# Plot y_B
plot(y_B)
```

```{r}
# Construct estimation and hold-out sets

print('Hold-out set:')
y_B.tst <- tail(y_B, 12) # Hold-out set
print(y_B.tst)
print('')

print('Estimation set:')
y_B.trn <- head(y_B, 48) # Estimation set
print(y_B.trn)
```

```{r}
# Explore trend: Calculate and plot centered moving average
cma_B <- cmav(y_B.trn, outplot = 1)
```

```{r}
# Print the CMA calculated values
print(cma_B)
```

```{r}
# Explore seasonality
seasplot(y_B.trn)
```

```{r}
# Explore seasonality through boxplots of each month's values
seasplot(y_B.trn, outplot = 2)
```

```{r}
# Explore seasonality through subseries plotting
seasplot(y_B.trn, outplot = 3)
```

```{r}
# Explore seasonality through `Connected' boxplot across months.
seasplot(y_B.trn,outplot=4) 
```

```{r}
# Decomposing with decomp()
dc_B <- decomp(y_B.trn, outplot = 1)
```

#### LevelShift:

```{r}
# Select `LevelShift`
y_shift <- Y[,3]

# Convert to a time series, assuming the data ends in November
y_shift <- ts(y_shift, frequency = 12, end = c(2018, 11))
print(y_shift)
```

```{r}
# Plot y_shift
plot(y_shift)
```

```{r}
# Construct estimation and hold-out sets

print('Hold-out set:')
y_shift.tst <- tail(y_shift, 12) # Hold-out set
print(y_shift.tst)
print('')

print('Estimation set:')
y_shift.trn <- head(y_shift, 48) # Estimation set
print(y_shift.trn)
```

```{r}
# Explore trend: Calculate and plot centered moving average
cma_shift <- cmav(y_shift.trn, outplot = 1)
```

```{r}
# Print the CMA calculated values
print(cma_shift)
```

```{r}
# Explore seasonality
seasplot(y_shift.trn)
```

```{r}
# Explore seasonality through boxplots of each month's values
seasplot(y_shift.trn, outplot = 2)
```

```{r}
# Explore seasonality through subseries plotting
seasplot(y_shift.trn, outplot = 3)
```

```{r}
# Explore seasonality through `Connected' boxplot across months.
seasplot(y_shift.trn,outplot=4) 
```

```{r}
# Decomposing with decomp()
dc_shift <- decomp(y_shift.trn, outplot = 1)
```

#### Trend_A:

```{r}
# Select `Trend_A`
y_tA <- Y[,4]

# Convert to a time series, assuming the data ends in November
y_tA <- ts(y_tA, frequency = 12, end = c(2018, 11))
print(y_tA)
```

```{r}
# Plot y_tA
plot(y_tA)
```

```{r}
# Construct estimation and hold-out sets

print('Hold-out set:')
y_tA.tst <- tail(y_tA, 12) # Hold-out set
print(y_tA.tst)
print('')

print('Estimation set:')
y_tA.trn <- head(y_tA, 48) # Estimation set
print(y_tA.trn)
```

```{r}
# Explore trend: Calculate and plot centered moving average
cma_tA <- cmav(y_tA.trn, outplot = 1)
```

```{r}
# Print the CMA calculated values
print(cma_tA)
```

```{r}
# Explore seasonality
seasplot(y_tA.trn)
```

```{r}
# Explore seasonality through boxplots of each month's values
seasplot(y_tA.trn, outplot = 2)
```

```{r}
# Explore seasonality through subseries plotting
seasplot(y_tA.trn, outplot = 3)
```

```{r}
# Explore seasonality through `Connected' boxplot across months.
seasplot(y_tA.trn,outplot=4) 
```

```{r}
# Decomposing with decomp()
dc_tA <- decomp(y_tA.trn, outplot = 1)
```
